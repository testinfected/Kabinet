package com.vtence.kabinet

import java.sql.ResultSet


class Column<T>(
    val table: Table,
    val name: String,
    private val type: ColumnType<T>,
    val autoGenerated: Boolean = false
) : ColumnType<T> by type {

    val qualifiedName: String = "${table.tableName}.$name"

    fun autoGenerated(): Column<T> =
        Column(table, name, type, true).also { table.replaceColumn(this, it) }

    override fun toString(): String = qualifiedName

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (other !is Column<*>) return false

        return table == other.table && name == other.name
    }

    override fun hashCode(): Int = 31 * table.hashCode() + name.hashCode()
}


infix operator fun <T> ResultSet.get(column: Column<T>): T? {
    return column.get(this, column.indexIn(this))
    // todo handle non nullable columns
}

private fun Column<*>.indexIn(rs: ResultSet): Int {
    return rs.findColumn(qualifiedName)
}
