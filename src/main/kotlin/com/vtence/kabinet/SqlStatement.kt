package com.vtence.kabinet

import java.sql.PreparedStatement
import java.sql.Statement

class SqlStatement(private val sql: String) : Compilable {
    private var autoGeneratedKeys = Statement.NO_GENERATED_KEYS

    fun retrieveGeneratedKeys() = apply { autoGeneratedKeys = Statement.RETURN_GENERATED_KEYS }

    val parameters: List<String>
        get() = PARAM.findAll(sql).map { it.value }.toList()

    fun toSql(): String {
        return parameters
            .sortedByDescending { it }
            .fold(sql) { sql, name ->
                sql.replace(name.toRegex(), "?")
            }
    }

    override fun <T> compile(parameters: Iterable<Any?>, query: (PreparedStatement) -> T): JdbcStatement<T> {
        return PreparedJdbcStatement(toSql(), parameters, { it.prepareStatement(toSql(), autoGeneratedKeys) }, query)
    }

    override fun toString(): String = toSql()

    companion object {
        private val PARAM = Regex("(:\\w+)")
    }
}
