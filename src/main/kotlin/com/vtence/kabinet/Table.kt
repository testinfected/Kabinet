package com.vtence.kabinet


interface ColumnSet {
    fun columns(includeAutoGenerated: Boolean): List<Column<*>>
}

open class Table(name: String): ColumnSet {
    val tableName = name
    private val columns = mutableListOf<Column<*>>()

    fun columnNames(includeAutoGenerated: Boolean): List<String> = columns(includeAutoGenerated).map { it.name }

    override fun columns(includeAutoGenerated: Boolean): List<Column<*>> {
        return columns.filter { !it.autoGenerated || includeAutoGenerated }
    }

    fun int(name: String): Column<Int?> = add(Column(this, name, IntColumn))

    fun string(name: String): Column<String?> = add(Column(this, name, StringColumn))

    private fun <T> add(column: Column<T>): Column<T> = column.also { columns += it }

    fun replaceColumn(old: Column<*>, new: Column<*>) = with(columns) {
        remove(old)
        add(new)
    }
}
