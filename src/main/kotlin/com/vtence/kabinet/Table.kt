package com.vtence.kabinet


interface ColumnSet {
    val columns: List<Column<*>>
}

fun List<Column<*>>.excludedAutoGenerated() = filterNot { it.autoGenerated }

val List<Column<*>>.names get() = map { it.name }

val List<Column<*>>.qualifiedNames get() = map { it.qualifiedName }


open class Table(name: String): ColumnSet {
    val tableName = name
    private val _columns = mutableListOf<Column<*>>()
    override val columns: List<Column<*>> get() = _columns

    fun int(name: String): Column<Int> = add(Column(this, name, IntType))

    fun string(name: String): Column<String> = add(Column(this, name, StringType))

    private fun <T> add(column: Column<T>): Column<T> = column.also { _columns += it }

    fun replaceColumn(old: Column<*>, new: Column<*>): Unit = with(_columns) {
        remove(old)
        add(new)
    }
}
