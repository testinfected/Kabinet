package com.vtence.kabinet

import java.sql.Connection


class Insert(private val into: Table, private val values: DataChange) {

    private val statement = InsertStatement(into)

    fun execute(executor: StatementExecutor): KeySet {
        return executor.execute(statement.compile(values.parameters) { insert ->
            values(insert)
            val inserted = insert.executeUpdate()
            if (inserted > 0)
                KeySet(insert.generatedKeys.read(into.columns.autoGenerated()))
            else
                KeySet.none()
        })
    }

    override fun toString(): String = statement.toSql()

    companion object {
        fun into(table: Table, values: DataChange): Insert {
            return Insert(table, values)
        }
    }
}

fun Insert.execute(connection: Connection): KeySet = execute(StatementExecutor(connection))


fun <T : Table> T.insert(record: T.(Dataset) -> Unit): Insert =
    Insert.into(this, Dataset.closed(columns.notAutoGenerated()).apply { record(this) })
